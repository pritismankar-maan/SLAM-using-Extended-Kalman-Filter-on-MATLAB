function visualize_pose(current_pose,cv,landmarks,is_landmark_obs,sensor)
In this function we are plotting the below things at each timestep:
Robot's estimated position by EKF Algorithm
Gaussian distribution(ellipse) around the Robot corrected position
Landmark's actual position
Landmark's estimated position by EKF Algorithm
Gaussian distribution(ellipse) around the Landmarks corrected position
Line joining the Robot and obsLandmark's estimated 

    clf;
    hold on
    grid("on")
    L = struct2cell(landmarks);
% plot corrected robot estimate around the robot     
    drawprobellipse(current_pose(1:3), cv(1:3,1:3), 0.6, 'r');
% plot actual landmark position based on input data    
    plot(cell2mat(L(2,:)), cell2mat(L(3,:)), 'k+', 'markersize', 10, 'linewidth', 5);     
    for(i=1:length(is_landmark_obs))
        if(strcmp(is_landmark_obs(i).is_obs,'true'))
% for each observed landmark...
% plot corrected landmark position            
            plot(current_pose(2*i+ 2),current_pose(2*i+ 3), 'bo', 'markersize', 10, 'linewidth', 5)
% plot corrected landmark's estimate around the landmark            
            drawprobellipse(current_pose(2*i+ 2:2*i+ 3), cv(2*i+ 2:2*i+ 3,2*i+ 2:2*i+ 3), 0.6, 'b');
        end
    end
% plot the line between robot and visible landmarks
    for(i=1:size(sensor,2))
        mX = current_pose(2*sensor(i).id+2);
        mY = current_pose(2*sensor(i).id+3);
        line([current_pose(1), mX],[current_pose(2), mY], 'color', 'k', 'linewidth', 1);
    end
% plot correct robot position
    drawrobot(current_pose(1:3), 'r', 3, 0.3, 0.3);
    xlim([-2, 12])
    ylim([-2, 12])
    hold off
    drawnow;

end